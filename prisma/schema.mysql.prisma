// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid              String   @db.VarChar(50)
  role_id           Int      @default(1) @db.UnsignedSmallInt
  email             String   @db.VarChar(320)
  hash_key          String   @db.VarChar(200)
  is_email_verified Boolean  @default(false) @db.UnsignedTinyInt()
  profile_name      String   @db.VarChar(100)
  profile_image     String?  @db.VarChar(300)
  extra             Json     @db.Json()
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@unique([email])
  @@index([role_id])
  @@index([created_at(sort: Desc)])
}

model Channels {
  channel_id   String   @id @db.VarChar(50)
  name         String   @db.VarChar(60)
  handle       String   @db.VarChar(50)
  enroll_count Int      @default(0) @db.UnsignedInt
  extra        Json     @db.Json()
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@fulltext([name])
}

model Courses {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  video_id     String   @db.VarChar(50)
  channel_id   String   @db.VarChar(50)
  category_id  Int      @db.UnsignedInt
  language     String   @db.VarChar(10)
  title        String   @db.VarChar(110)
  description  String   @db.VarChar(5010)
  summary      String?  @db.VarChar(10000)
  chapters     Json     @db.Json()
  enroll_count Int      @db.UnsignedInt()
  generated_ai Boolean  @default(false) @db.UnsignedTinyInt()
  duration     Int      @db.UnsignedMediumInt()
  extra        Json     @db.Json()
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  published_at DateTime

  @@unique([video_id])
  @@index([channel_id])
  @@index([category_id])
  @@index([language])
  @@index([enroll_count(sort: Desc)])
  @@index([generated_ai])
  @@index([created_at(sort: Desc)])
  @@index([published_at(sort: Desc)])
  @@fulltext([title])
}

model Enrolls {
  user_id          BigInt   @db.UnsignedBigInt()
  course_id        BigInt   @db.UnsignedBigInt()
  chapter_progress Json     @db.Json()
  total_progress   Float    @db.Float()
  recent_progress  Json     @db.Json()
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  @@id([user_id, course_id])
  @@index([course_id])
  @@index([user_id, created_at(sort: Desc)])
  @@index([user_id, updated_at(sort: Desc)])
}

model Categories {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  name      String @db.VarChar(100)
  parent_id Int    @db.UnsignedInt

  @@index([parent_id])
}

model Roles {
  id   Int    @id @db.UnsignedInt
  name String @db.VarChar(100)
}
