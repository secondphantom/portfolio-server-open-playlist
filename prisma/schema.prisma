// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL_RAILWAY_POSTGRES")
  relationMode = "prisma"
}

model Users {
  id                BigInt   @id @default(autoincrement()) @db.BigInt
  uuid              String   @db.VarChar(50)
  role_id           Int      @default(1) @db.Integer
  email             String   @db.VarChar(320)
  hash_key          String   @db.VarChar(200)
  is_email_verified Boolean  @default(false) @db.Boolean
  profile_name      String   @db.VarChar(100)
  profile_image     String?  @db.VarChar(300)
  extra             Json     @db.JsonB()
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now()) @updatedAt

  @@unique([email])
  @@index([role_id])
  @@index([created_at(sort: Desc)])
}

model Channels {
  channel_id    String                   @id @db.VarChar(50)
  name          String                   @db.VarChar(60)
  name_tsvector Unsupported("TSVECTOR")?
  handle        String                   @db.VarChar(50)
  enroll_count  Int                      @default(0) @db.Integer
  extra         Json                     @db.JsonB()
  created_at    DateTime                 @default(now())
  updated_at    DateTime                 @default(now()) @updatedAt

  @@index([name_tsvector])
}

model Courses {
  id             BigInt                   @id @default(autoincrement()) @db.BigInt
  video_id       String                   @db.VarChar(50)
  channel_id     String                   @db.VarChar(50)
  category_id    Int                      @db.Integer
  language       String                   @db.VarChar(10)
  title          String                   @db.VarChar(110)
  title_tsvector Unsupported("TSVECTOR")?
  description    String                   @db.VarChar(5010)
  summary        String?                  @db.VarChar(10000)
  chapters       Json                     @db.JsonB()
  enroll_count   Int                      @db.Integer
  generated_ai   Boolean                  @default(false) @db.Boolean()
  duration       Int                      @db.Integer()
  extra          Json                     @db.JsonB()
  created_at     DateTime                 @default(now())
  updated_at     DateTime                 @default(now()) @updatedAt
  published_at   DateTime

  @@unique([video_id])
  @@index([channel_id])
  @@index([category_id])
  @@index([language])
  @@index([enroll_count(sort: Desc)])
  @@index([generated_ai])
  @@index([created_at(sort: Desc)])
  @@index([published_at(sort: Desc)])
  @@index([title_tsvector])
}

model Enrolls {
  user_id          BigInt   @db.BigInt()
  course_id        BigInt   @db.BigInt()
  chapter_progress Json     @db.JsonB()
  total_progress   Float    @db.Real()
  recent_progress  Json     @db.JsonB()
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  @@id([user_id, course_id])
  @@index([course_id])
  @@index([user_id, created_at(sort: Desc)])
  @@index([user_id, updated_at(sort: Desc)])
}

model Categories {
  id        Int    @id @default(autoincrement()) @db.Integer
  name      String @db.VarChar(100)
  parent_id Int    @db.Integer

  @@index([parent_id])
}

model Roles {
  id   Int    @id @db.Integer
  name String @db.VarChar(100)
}
